{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/faq/faq.component.ts","webpack:///src/app/components/faq/faq.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/links/links.component.ts","webpack:///src/app/components/links/links.component.html","webpack:///src/app/components/statewise/statewise.component.ts","webpack:///src/app/components/statewise/statewise.component.html","webpack:///src/app/components/statewise/statewise.pipe.ts","webpack:///src/app/dataservice.service.ts","webpack:///src/app/material.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","dataservice","title","BannerData","storebannerSubject","getBannerData","subscribe","data","BannerDataList","factoids","map","item","banner","count","length","source","i","subscription","val","opensnack","next","v","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FaqComponent","HomeComponent","total","confirmed","active","recovered","deaths","changes","getStateWiseData","setBasicData","getDailyCaseStatusData","setDifferenceData","history","lastDay","forEach","lastrefreshedtime","lastRefreshed","LinksComponent","StatewiseComponent","dataService","displayedColumns","toDay","yesterDay","today","statewise","data1","data2","state","push","confirmedChange","activeChange","recoveredChange","deathsChange","dataSource","paginator","sort","$event","filter","target","value","trim","firstPage","applyFilter","StatewisePipe","Math","abs","name","DataserviceService","http","districtdata","url_statewise","url_dailycases","ulr_districtwise","url_banner","get","pipe","district","districtData","providedIn","MaterialModule","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LinksComponent } from './components/links/links.component';\nimport { FaqComponent } from './components/faq/faq.component';\nimport { StatewiseComponent } from './components/statewise/statewise.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: \"home\", pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'state', component: StatewiseComponent },\n  { path: 'links', component: LinksComponent },\n  { path: 'faq', component: FaqComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subscription, interval } from 'rxjs';\nimport { DataserviceService } from './dataservice.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'covidTracker';\n\n  BannerDataList: any;\n  BannerData: string = \"Be a true Indian. Show compassion. Be considerate. Help those in need. We will get through this!\";\n  storebannerSubject: BehaviorSubject<any> = new BehaviorSubject('');\n\n  count: number;\n  subscription: Subscription;\n  intervalId: number;\n\n  constructor(private dataservice: DataserviceService) { }\n\n  ngOnInit(): void {\n    this.dataservice.getBannerData().subscribe(\n      data => {\n        this.BannerDataList = data.factoids.map(item => {\n          return item.banner;\n        })\n\n        this.count = this.BannerDataList.length - 1;\n        this.BannerData = this.BannerDataList[0];\n\n        const source = interval(5000);\n        let i: number = 0;\n\n        this.subscription = source.subscribe((val: any) => {\n          val = this.opensnack(this.BannerDataList[i]);\n          this.storebannerSubject.next(val);\n          i = i + 1;\n          if (i <= this.count) {\n            i = i + 1\n          } else {\n            i = 0;\n          }\n        })\n      })\n\n\n\n  }\n\n  opensnack(data) {\n    this.storebannerSubject.subscribe(v => {\n      this.BannerData = data;\n    })\n  }\n\n}\n","<div class=\"heading\">\n    <div class=\"container\">\n        <div class=\"Navbar\" style=\"animation-delay:0.5s;transition: all 0.3s ease-in-out 0s;\">\n            <img class=\"fadeInUp img-circle logo\" alt=\"Covid19 Tracker\" src=\"assets/images/heading4.png\"\n                style=\"animation-delay: 0s; transition: all 0.3s ease-in-out 0s;\">\n            <div class=\"navbar-left\">\n                <a routerLink=\"/home\" routerLinkActive=\"active\">\n                    <span class=\"fadeInUp\" style=\"animation-delay: 0.2s;\">Home</span>\n                </a>\n                <a routerLink=\"/state\" routerLinkActive=\"active\">\n                    <span class=\"fadeInUp\" style=\"animation-delay: 0.2s;\">StateWise</span>\n                </a>\n                <a routerLink=\"/links\" routerLinkActive=\"active\">\n                    <span class=\"fadeInUp\" style=\"animation-delay: 0.5s;\">Helpful Links</span>\n                </a>\n                <a routerLink=\"/faq\" routerLinkActive=\"active\">\n                    <span class=\"fadeInUp\" style=\"animation-delay: 0.6s;\">faq</span>\n                </a>\n            </div>\n\n\n        </div>\n    </div>\n\n    <div class=\"Banner fadeInUp\" style=\"animation-delay: 0.2s;\">\n        <div class=\"snippet\" *ngIf=\"BannerData else noBanner\">{{BannerData}} &nbsp;</div>\n        <ng-template #noBanner>\n            <div class=\"snippet\">#BreakTheChain of unverified WhatsApp forwards which spread wrong information! Do not\n                forward unless you verify it.</div>\n        </ng-template>\n    </div>\n</div>\n\n<router-outlet></router-outlet>\n\n\n<footer>\n    <h5 class=\"text-center\"\n        style=\"margin-bottom: 0;font-size: 11px;padding: 30px;color: rgb(65, 61, 61);font-weight:700;background-color: lavender;\">\n        © Copyrights reserved by Manjunath Reddy\n    </h5>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\nimport { LinksComponent } from './components/links/links.component';\nimport { FaqComponent } from './components/faq/faq.component';\nimport { StatewiseComponent } from './components/statewise/statewise.component';\nimport { StatewisePipe } from './components/statewise/statewise.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LinksComponent,\n    FaqComponent,\n    StatewiseComponent,\n    StatewisePipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.css']\n})\nexport class FaqComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>under development</p>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataserviceService } from 'src/app/dataservice.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  lastrefreshedtime: Date;\n  total: any = { confirmed: '', active: '', recovered: '', deaths: '' };\n  changes: any = { confirmed: '', active: '', recovered: '', deaths: '' };\n\n  constructor(private dataservice: DataserviceService) { }\n\n\n  ngOnInit() {\n    this.dataservice.getStateWiseData()\n      .subscribe(\n        data => {\n          this.setBasicData(data);\n        }\n      )\n    this.dataservice.getDailyCaseStatusData()\n      .subscribe(\n        data => {\n          this.setDifferenceData(data);\n        }\n      )\n  }\n  setDifferenceData(data: any) {\n    let history = data.data.history;\n    let lastDay = history.length - 1;\n    let count = 1;\n    history.forEach(item => {\n      if (count == lastDay) {\n        this.changes.confirmed = this.total.confirmed - item.total.confirmed;\n        this.changes.active = this.total.active - item.total.active;\n        this.changes.recovered = this.total.recovered - item.total.recovered;\n        this.changes.deaths = this.total.deaths - item.total.deaths;\n      }\n      count++;\n    })\n  }\n  setBasicData(data: any) {\n    this.lastrefreshedtime = data.lastRefreshed;\n    this.total.confirmed = data.data.total.confirmed;\n    this.total.active = data.data.total.active;\n    this.total.recovered = data.data.total.recovered;\n    this.total.deaths = data.data.total.deaths;\n  }\n}\n","<div>\r\n    <div class=\"container\">\r\n        <div class=\"row\" style=\"animation-delay: 0.8s;\">\r\n            <mat-card class=\"date-card\">\r\n                <mat-card-header>\r\n                    <mat-card-title style=\"color: rgb(51, 40, 40);\">Last Updated</mat-card-title>\r\n                </mat-card-header>\r\n                <mat-card-content style=\"text-align: center;\">\r\n                    <h4>{{lastrefreshedtime | date:'dd MMM,hh:mm'}} IST</h4>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n    <div class=\"container\">\r\n        <div class=\"row\" style=\"animation-delay: 0.8s;\">\r\n            <mat-card class=\"card\">\r\n                <mat-card-header>\r\n                    <mat-card-title style=\"color: rgb(216, 84, 84);\">Confirmed</mat-card-title>\r\n                </mat-card-header>\r\n                <mat-card-content style=\"text-align: center;\">\r\n                    <span>\r\n                        <mat-icon style=\"color: rgb(216, 84, 84);\">trending_up</mat-icon>{{changes.confirmed}}\r\n                    </span>\r\n                    <h1>{{total.confirmed}}</h1>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <mat-card class=\"card\">\r\n                <mat-card-header>\r\n                    <mat-card-title style=\"color: rgb(45, 23, 235);\">Active</mat-card-title>\r\n                </mat-card-header>\r\n                <mat-card-content style=\"text-align: center;\">\r\n                    <span>\r\n                        <mat-icon style=\"color: rgb(45, 23, 235);\">trending_up</mat-icon>{{changes.active}}\r\n                    </span>\r\n                    <h1>{{total.active}}</h1>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <mat-card class=\"card\">\r\n                <mat-card-header>\r\n                    <mat-card-title style=\"color: rgb(71, 187, 67);\">Recovered</mat-card-title>\r\n                </mat-card-header>\r\n                <mat-card-content style=\"text-align: center;\">\r\n                    <span>\r\n                        <mat-icon style=\"color: rgb(71, 187, 67);\">trending_up</mat-icon>{{changes.recovered}}\r\n                    </span>\r\n                    <h1>{{total.recovered}}</h1>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <mat-card class=\"card\">\r\n                <mat-card-header>\r\n                    <mat-card-title style=\"color: rgb(107, 69, 69);\">Death</mat-card-title>\r\n                </mat-card-header>\r\n                <mat-card-content style=\"text-align: center;\">\r\n                    <span>\r\n                        <mat-icon style=\"color: rgb(107, 69, 69);\">trending_up</mat-icon>{{changes.deaths}}\r\n                    </span>\r\n                    <h1>{{total.deaths}}</h1>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-links',\n  templateUrl: './links.component.html',\n  styleUrls: ['./links.component.css']\n})\nexport class LinksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>under development</p>","import { Component, OnInit, ViewChild, Pipe, PipeTransform } from '@angular/core';\nimport { DataserviceService } from 'src/app/dataservice.service';\nimport { Covidcase } from 'src/app/interfaces/covidcase';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Covidtrack } from 'src/app/interfaces/covidtrack';\n\n@Component({\n  selector: 'app-statewise',\n  templateUrl: './statewise.component.html',\n  styleUrls: ['./statewise.component.css']\n})\nexport class StatewiseComponent implements OnInit {\n\n  constructor(private dataService: DataserviceService) { }\n\n  dataSource: MatTableDataSource<Covidtrack>;\n  displayedColumns: string[] = [\n    'state',\n    'confirmedChange',\n    'confirmed',\n    'recoveredChange',\n    'recovered',\n    'deathsChange',\n    'deaths',\n    'activeChange',\n    'active'\n  ]\n\n  toDay: Covidcase[] = [];\n  yesterDay: Covidcase[] = [];\n  changes: Covidtrack[] = [];\n\n  @ViewChild(MatPaginator, { static: true })\n  paginator: MatPaginator;\n\n  @ViewChild(MatSort, { static: true })\n  sort: MatSort;\n\n  ngOnInit() {\n\n    this.dataService.getDailyCaseStatusData()\n      .subscribe(\n        data => {\n          this.setDifferenceData(data);\n        }\n      )\n  }\n\n  setDifferenceData(data: any) {\n    let history = data.data.history;\n    let lastDay = history.length - 1;\n    let today = history.length;\n    let count = 1;\n    history.forEach(item => {\n      if (count == today) {\n        this.toDay = item.statewise;\n      }\n      if (count == lastDay) {\n        this.yesterDay = item.statewise;\n      }\n      count++;\n    });\n\n    this.toDay.forEach(data1 => {\n      this.yesterDay.forEach(data2 => {\n        if (data1.state == data2.state) {\n          this.changes.push(\n            {\n              state: data1.state,\n              confirmed: data1.confirmed,\n              active: data1.active,\n              recovered: data1.recovered,\n              deaths: data1.deaths,\n              confirmedChange: data1.confirmed - data2.confirmed,\n              activeChange: data1.active - data2.active,\n              recoveredChange: data1.recovered - data2.recovered,\n              deathsChange: data1.deaths - data2.deaths\n            }\n          )\n          this.dataSource = new MatTableDataSource(this.changes);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }\n      })\n    })\n  }\n\n  applyFilter($event) {\n    this.dataSource.filter = $event.target.value.trim();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<span class=\"form\">\n    <mat-label class=\"search\">Search:</mat-label>\n    <mat-form-field class=\"search\">\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Eg:-Delhi\">\n    </mat-form-field>\n\n</span>\n<div class=\"container mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"state\">\n            <th style=\"color: rgb(17, 17, 226);\" mat-header-cell *matHeaderCellDef mat-sort-header> State/UT </th>\n            <td mat-cell *matCellDef=\"let element\">{{element.state}} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n\n        <ng-container matColumnDef=\"confirmedChange\">\n            <th style=\"color: rgb(238, 23, 15);\" mat-header-cell *matHeaderCellDef mat-sort-header>Confimed\n                <mat-icon style=\"color: red;\">trending_up</mat-icon>\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span *ngIf=\"element.confirmedChange !=0\">\n                    <mat-icon style=\"color: red;\">arrow_upward</mat-icon>\n                </span> {{element.confirmedChange}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"confirmed\">\n            <th style=\"color: rgb(238, 23, 15);\" mat-header-cell *matHeaderCellDef mat-sort-header>Confimed</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.confirmed}} </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"activeChange\">\n            <th style=\"color: rgb(243, 9, 9);\" mat-header-cell *matHeaderCellDef mat-sort-header>Active\n                <mat-icon style=\"color: red;\">trending_up</mat-icon>\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span *ngIf=\"element.activeChange !=0 && element.activeChange<0\">\n                    <mat-icon style=\"color: rgb(21, 255, 0);\">arrow_downward</mat-icon>\n                </span>\n                <span *ngIf=\"element.activeChange !=0 && element.activeChange>0\">\n                    <mat-icon style=\"color: rgb(226, 9, 9);\">arrow_upward</mat-icon>\n                </span>{{element.activeChange |modulus}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"active\">\n            <th style=\"color: rgb(243, 9, 9);\" mat-header-cell *matHeaderCellDef mat-sort-header> Active </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.active}} </td>\n        </ng-container>\n\n\n        <ng-container matColumnDef=\"recoveredChange\">\n            <th style=\"color: rgb(28, 243, 9);\" mat-header-cell *matHeaderCellDef mat-sort-header> Recovered\n                <mat-icon style=\"color: red;\">trending_up</mat-icon>\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span *ngIf=\"element.recoveredChange !=0\">\n                    <mat-icon style=\"color: red;\">arrow_upward</mat-icon>\n                </span> {{element.recoveredChange}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"recovered\">\n            <th style=\"color: rgb(28, 243, 9);\" mat-header-cell *matHeaderCellDef mat-sort-header> Recovered </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.recovered}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"deathsChange\">\n            <th style=\"color: rgb(124, 111, 115);\" mat-header-cell *matHeaderCellDef mat-sort-header> Deaths\n                <mat-icon style=\"color: red;\">trending_up</mat-icon>\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span *ngIf=\"element.deathsChange !=0\">\n                    <mat-icon style=\"color: red;\">arrow_upward</mat-icon>\n                </span> {{element.deathsChange}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"deaths\">\n            <th style=\"color: rgb(124, 111, 115);\" mat-header-cell *matHeaderCellDef mat-sort-header> Deaths </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.deaths}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n\r\n@Pipe({ name: 'modulus' })\r\nexport class StatewisePipe implements PipeTransform {\r\n\r\n    transform(value: any): number {\r\n        return Math.abs(value);\r\n    }\r\n\r\n}","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { map } from 'rxjs/operators';\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataserviceService implements OnInit {\n\n  data: any;\n  state: string;\n  district: string;\n  BannerData: BehaviorSubject<any> = new BehaviorSubject('');\n  districtdata: Subject<any> = new Subject<any>();\n\n  private url_statewise: string = \"https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewise\";\n  private url_dailycases: string = 'https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewise/history';\n  private ulr_districtwise: string = \"https://api.covid19india.org/state_district_wise.json\";\n  private url_banner: string = \"https://api.covid19india.org/website_data.json\";\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getStateWiseData();\n    this.getDailyCaseStatusData();\n  }\n\n  getBannerData(): Observable<any> {\n    return this.http.get(this.url_banner);\n  }\n\n  getStateWiseData(): Observable<any> {\n    return this.http.get(this.url_statewise)\n      .pipe(\n        map(data => {\n          return data;\n        })\n      );\n  }\n\n  getDailyCaseStatusData(): Observable<any> {\n    return this.http.get(this.url_dailycases)\n      .pipe(\n        map(data => {\n          return data;\n        })\n      );\n  }\n\n  getState(state) {\n    this.state = state;\n  }\n\n  getDistrictWiseData(state) {\n    this.http.get(this.ulr_districtwise)\n      .subscribe(data => {\n        this.data = data\n        this.district = this.data[this.state].districtData\n        this.districtdata.next(this.district)\n      })\n  }\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatChipsModule } from \"@angular/material/chips\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatCardModule,\r\n        MatIconModule,\r\n        MatTableModule,\r\n        MatChipsModule,\r\n        MatSortModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatPaginatorModule,\r\n        MatProgressSpinnerModule\r\n    ],\r\n    exports: [\r\n        MatCardModule,\r\n        MatIconModule,\r\n        MatTableModule,\r\n        MatChipsModule,\r\n        MatSortModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatPaginatorModule,\r\n        MatProgressSpinnerModule\r\n    ]\r\n})\r\nexport class MaterialModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}